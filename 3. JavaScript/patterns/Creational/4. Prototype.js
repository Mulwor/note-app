/* Паттерн Прототип - порождающий паттерн, который позволяет копировать объекты не вдаваясь в подроб-
ности их реализации. В шаблоне прототип есть базовая реализация классов используя упрощенный интерфейс.
Мы создаем клоны объектов, а клоны могут понадобится для того, чтобы в случае необходимости: изменить
их структуру и заточить под выполнения определенных задач */

class TeslaCar {
    // В конструкторе определяются требуемые свойства
	constructor(model, price, interior, autopilot) {
		this.model = model;
		this.price = price;
		this.interior = interior;
		this.autopilot = autopilot;
	}
    // Метод produce() возвращает функцию-конструктор (другими словами: клонирует объект)
	produce() {
		return new TeslaCar(this.model, this.price, this.interior, this.autopilot);
	}
}

// Создаем экземпляр класса через prototypeCar, внутри все основные характеристики будущего автомобиля (технич.дока автомобиля)
const prototypeCar = new TeslaCar('S', 80000, 'black', false);

/* Если созданная модель нас полность устраивает, и теперь вместо того, чтобы искать нужные документы, мы
просто создаем новые автомобили на основании текущего. Просто клонируя его используя метод produce:
car1, car2, car3 - это полное копия нашего эталонного автомобиля*/
const car1 = prototypeCar.produce();
const car2 = prototypeCar.produce();
const car3 = prototypeCar.produce();

/* И теперь соответственно произведенные автомобили мы хотим продать, однако клиент сделал требование о том,
что ему нужен белый цвет автосолона и наличие автопилота. Вместо того, чтобы менять документацию или создавать
новую. Мы просто берем 1 произведенный авто (car1) и добавляем в него нужное требование, то есть изменяем клон
под какие-то критерии. После чего у нас имеется требуемые клиентам функционал только в одном авто. Все остальные
же остались без изменениий. В том числе и эталонное авто и документация, так как нету смысла менять эти пара-
метры под каждого клиента. Нам намного проще работать с одним объектом и менять только его конфигурацию. */
car1.interior = "white";
car1.autopilot = true;
console.log(car1); //TeslaCar { model: 'S', price: 80000, interior: 'white', autopilot: true }
console.log(car2); //TeslaCar { model: 'S', price: 80000, interior: 'black', autopilot: false }


// Прототип - это паттерн, с помощью которого мы можем создать копию объекта везде где нам это требуется с минимальными затратами памяти