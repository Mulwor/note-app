// Abstract factory - абстрактная фабрика 
/* Это паттерн, который создает интерфейс, группирующие другие фабрики, которые логически
связаны друг с другом (своеобразная абстракция для фабрики и фабричного метода) */

/* Используется, например: у нас есть семейство общих продуктов: автомобили марки BMV. Стоит отметить, что 
хоть и конечный объект фактически один и тот же - это просто класс (или просто автомобиль). 
Но модельный ряд, комплектацие, цветовые гаммы, интерьеры и экстерьеры всегда разные */

/* Мы работаем в компании: обычных спорт-автомобилей (написали логику) и главарь нашей 
подпольной команды говорит мы притащим сюда еще и семейные автомобили. И мы выделяем 1 супер-
класс: производство и описываем в нем логику производства тех или иных автомобилей. После чего
используем в ней уже существующие фабрики и в зависимости от условия производить ту или
иную модель */

/* Абстрактная фабрика - это дополнительная настройка над другими фабриками. Осообенность
заключается в том, что у подфабрик должен быть одинаковый интерфейс создания объекта, 
чтобы им можно было управлять из абстрактной фабрики */

/* Производство автомобилей - это прежде всего фабрика, где может производится только 1 
оперделенная модель и таких фабрик с производством разных моделей может быть несколько.
Таким образом можно сказать, что производство авто в целом - абстрактная фабрика, которая
выглядит следующим образом */

// Абстрактная фабрика (в зависимости от потребностей будет производит либо спорткары либо семейное авто)
function bmwProducer(kind) {
  // И за каждый из этих типов отвечает своя собственная фабрика: sportCarFactory и familyCarFactory
  return kind === 'sport' ? sportCarFactory : familyCarFactory;
} 

// Фабричный метод
function sportCarFactory() {
  return new Z4();
}
function familyCarFactory() {
  return new I3();
}

/* В свою очередь непосредственно производство автомобиля осуществляется с помощью функции конструкутора
или класс Z4 и I3 */
class Z4 {
  info() {
    return "Z4 is a Sport car!";
  }
}
class I3 {
  info() {
    return "i3 is a Family car!";
  }
}

/* Описав производство автомобилей нам удалось описать паттерн абстрактной фабрики соответственно
если вам нужен спорт-кар, то нет ничего проще его заказать. В результате чего на производство - абстрактная
фабрика прилетит запрос на создание спорткара. В свою очередь производства отправит запрос на создание автомобиля
Это обычный объект на соответствующию фабрику, который и создаст экземпляр нужного вам авто*/

const produce = bmwProducer('sport');
const myCar = new produce();  // Car producing (factory method)
console.log(myCar.info())     // 'Z4 is a Sport car!'

/* Итог: абстрактная фабрика - это доп.настройка, которая управляя однотипными фабриками. Помо-
гает создавать объекты со схожей структурой, но разными данными. Причем делает это не привязыва-
ясь к конкретным классам создаваемых объектов*/