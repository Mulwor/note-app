// ! Например: у нас есть автомобиль (класс) и у всех автомобилей есть общие черты (свойства) - руль,
// ! педали, колеса и т. д. И автомобилю можно отдавать команды (методы).

console.log('---------------Вызов первого класса:-------------------');

// * 1. Создаем класс - по сути это функция
class Car {
  // * 2. Создаем пока что пустые свойства (цвет и кол-во топлива) для нашего автомобиля
  color;
  fuel;

  // * 3. Создаем метод
  show() {
    return '+++';
  }

  user(name, surn) {
    return name + ' ' + surn;
  }
}

// *4. После того как сделали так называемый общий чертеж, нам необходимо создать объект (он может быть не один)
// * со всеми перечисленными методами
let myCar = new Car(); // командуем заводу сделать автомобиль
let myCar1 = new Car();

// *5. Записываем свойства в объект, а тот перенаправит на класс
myCar.color = 'red'; // красим в красный цвет
myCar.fuel = 50; // заливаем топливо
myCar1.color = 'black';

console.log(myCar);
console.log(myCar1);
console.log(myCar.color); // Мы можем вытащить определенное значение
console.log(myCar.show()); // Мы можем вытащить данный метод и показать его
console.log(myCar.user('John', 'Smith'));
// ===================================================================================

console.log('----------------Вызов второго класса:--------------------');

class User1 {
  // * 3. В свойства можно сразу записать какое-нибудь значение
  firstName = 'Jack';

  // *4. Конструктор – это специальный метод, который вызывается при создании объекта, он также
  // * может принимать в себя некоторые аргументы. Внутри него можно также передавать параметры
  constructor(name, surn) {
    console.log('Вызов конструктора: ');
    console.log(name + ' ' + surn);
  }

  show() {
    // * 1. this - будет указывать на объект класса, что также означает мы можем обращатся
    // * к свойству объект
    console.log(this); // Ссылка на объект
    console.log(this.name); // Ссылка на значение
  }

  // *2. Одни методы можно вызывать внутри других через this.
  show1() {
    // return this.name
    console.log(this.cape(this.name));
  }
  cape(str) {
    return str[0].toUpperCase() + str.slice(1);
  }
}

let user1 = new User1('Jack', 'Dickeldson'); // * 5. Работа с конструкторам
user1.name = 'john';
user1.show(); // * выведет 'john'
user1.show1();
console.log(user1.firstName); // * "Jack"
