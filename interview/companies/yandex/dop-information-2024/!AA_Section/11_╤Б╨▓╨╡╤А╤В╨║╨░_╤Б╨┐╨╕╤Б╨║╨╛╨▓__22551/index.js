// Условие задачи:
//
//     Дан список неотрицательных целых чисел, в котором повторяющихся элементов нет.
//     Необходимо преобразовать этот список в строку, сворачивая соседние по числовому ряду числа в диапазоны.
//
// Примеры:
//     1.	compress([1, 4, 5, 2, 3, 9, 8, 11, 0])
// Результат: "0-5,8-9,11"
// 2.	compress([1, 4, 3, 2])
// Результат: "1-4"
// 3.	compress([1, 4])
// Результат: "1,4"
// 4.	compress([1, 2])
// Результат: "1-2"
//
// Требования:
//     1.	Если числа последовательны (например, [1, 2, 3, 4]), их нужно объединить в диапазон вида "1-4".
// 2.	Если числа не последовательны (например, [1, 4]), их нужно записать через запятую.
// 3.	Если список пуст, результат должен быть пустой строкой.
// 4.	Порядок чисел в строке должен соответствовать отсортированному списку.

// ===================================================================

function compress (list) {
    list.sort ((a, b) => a - b);
    // Инициализируем начальное значение диапазона первым элементом отсортированного массива
    let res = list[0];
    // Переменная для отслеживания, находимся ли мы в середине последовательности
    let iteration = null;
    // Проходим по массиву, начиная со второго элемента
    for (let i = 1; i < list.length; i++) {
        // Проверяем, идет ли текущий элемент (arr[i]) непосредственно за предыдущим (arr[i - 1])
        if (list[i - 1] + 1 === list[i]) {
            // Если да, то мы находимся внутри последовательности
            iteration = true;
        } else {
            // предыдущий отрезок был последовательностью
            if (iteration) {
                res = res + '-' + list[i - 1] + ',' + list[i];
                iteration = false;
                // Если нет, то текущая последовательность прервалась
            } else {
                //  предыдущие числа не были последовательностью , добавляем текущий элемент как новое число
                res = res + ',' + list[i];
            }
        }
    }
    // Если последний элемент был частью последовательности, добавляем его в диапазон
    if (iteration)
        res = res + '-' + list[list.length - 1];

    // Возвращаем строку сформированных диапазонов
    return res;
}


const arr1 = [1, 4, 5, 2, 3, 9, 8, 11, 0]
const arr2 = [1, 3, 4, 0, 2]
const arr3 = [1, 4]
const arr4 = [2, 5, 1, 3, 8, 9, 11, 0, 4, 12, 14, 16, 17, 28, 19]


console.log (compress (arr1))
console.log (compress (arr2))
console.log (compress (arr3))
console.log (compress (arr4))
