// Дан массив строк. Необходимо сгруппировать строки в группы, где каждая группа состоит из анаграмм.
//
//     Анаграммы — это слова, которые могут быть получены перестановкой букв одного слова (например, “нос” и “сон”).
//
// Требования:
//     1.	Решение должно быть максимально эффективным по памяти и времени.
// 2.	Не использовать сортировку строки для определения анаграммы.


// Тестирование
console.log(groupAnagrams(['сон', 'нос', 'сорт', 'трос', 'торт', 'рост']));
// Ожидаемый результат:
// [
//   ['сон', 'нос'],
//   ['сорт', 'трос', 'рост'],
//   ['торт']
// ]


// ===================================================================


function groupAnagrams(list) {
    // 1. Создаем объект, в котором будем хранить группы слов ключ значение
    const mapOfWords = {};
// 2. Проходимся по всем словам
    for (const word of list) {
        // 3. Сортируем буквы в слове
        const key = word.split ('').sort ().join ('');
        // 4. Если в объекте нет свойства с таким ключом, то создаем его
        if (!mapOfWords[key]) {
            // 5. Создаем пустой массив для группы
            mapOfWords[key] = [];
        }
        // 6. Добавляем слово в группу
        mapOfWords[key].push(word);
    }
    // 7. Возвращаем массив групп
    return Object.values (mapOfWords);
}

