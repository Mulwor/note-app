span,
div {
  border: 10px solid red;
  /* Мы можем добавить отступы у всех обведенных в красный цвет элементы:*/
  /*1. Padding - это промежуток между контентом или содержимым тега или его границей. Именно поэтому между словом и красная обводка появилась
  пространства.*/
  /*2. Margin - это пустое пространства, который отделяет один тег от другого и находится за пределами границы. */
  /* Оба свойства определяют отступы только одни оступы находятся внутри, а другие снаружи*/
  /* Отступы добавляются к элементу сверху, слева, снизу и справа. Если необходимо более точно сделать отступы, то указываются 4 значения, однако
  если значения совпадают, то можно использовать и сокращенный вариант написания: cверх и снизу: 10px; cлева и справа:20px*/
  margin: 10px 20px;
  /* Помимо: padding: 10px 20px 30px 40px; Cуществует также 4 способа, которые также определяют отступы: padding-top (сверху); 
  padding-right(справа); padding-bottom(снизу); padding-left(cлева), те же свойства и для margin*/
  padding-top: 10px;
  padding-right: 20px;
  padding-bottom: 30px;
  padding-left: 40px;
  /* 1. Стоит отметить, что для строчных элементов не работают свойства: margin-top и margin-bottom и задания размеров (ширина и вососта) для 
  них непренима*/
  /* 2. Эффект схлопывание отступов - если 2 элемента с разными margin стоят рядом, то сумарное расстояние между ними будет равно большему
  margin*/
}

/* display - управляет типом тегов - применяя его к элементу мы можем изменить его дефолный тип. Написав: inline он делается строчным
block - блочным; inline-block - строчно блочным (к нему применяются все свойства обоих типов - применив данное свойство мы сможем увидеть
более четкий размер нашего блока)*/
.test {
  display: inline;
}

/* Doesn't work for inline element */
span {
  width: 100px;
  height: 100px;
}

.mar {
  margin-top: 50px;
  width: 100px;
  height: 100px;
  /*inline-block - применяются все свойства обоих типов - применив данное свойство мы сможем увидеть более четкий размер нашего блока.
  Высота и ширина применились к контенту после чего к размером блока контента добавили размеры padding и границы, по этой причине наш квадрат
  превратился в треугольник. Другими словами с каждой стороны: были суммированы размеры каждой составляющей блочной модели*/
  display: inline-block;

  /*Чтобы не производить вычисления блокав самостоятельно и чтобы элементу применялись именно те размеры, которые были заданы необходимо исп:*/
  box-sizing: border-box; /*Принимает значент content-box в этом случае расчет значений будет по записанному сценарию, мы передаем именно те значение, 
  которые описали: грубо говоря ширину высоту и т.д. И стоит упомянуть, что при таком свойстве идет не расширение блока от области контента,
  а его ужатия внутрь*/
}
