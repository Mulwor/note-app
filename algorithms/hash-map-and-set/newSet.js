// ? Объект Set – это особый вид коллекции: «множество» значений (без ключей),  где каждое
// ? значение может появляться только один раз.

// ! Set – коллекция уникальных значений, так называемое «множество».
let set = new Set();

// ! 2. set.add(value) – добавляет значение (если оно уже есть, то ничего не делает), 
// ! возвращает тот же объект set.
let john = { name: "John" };
let pete = { name: "Pete" };
let mary = { name: "Mary" };
set.add(john);
set.add(pete);
set.add(mary);
set.add(john);
set.add(mary);

// ! 3. set.size – возвращает количество элементов в множестве.
console.log(set.size)                 // ? 3

// ! 4. set.delete(value) – удаляет значение, возвращает true, если value было в множестве на момент вызова, иначе false.
set.delete(john)

// ! 5. set.has(value) – возвращает true, если значение присутствует в множестве, иначе false.
set.has(john)

// ! 6. set.clear() – удаляет все имеющиеся значения.
set.clear()

// * ================================= Перебор =======================================================

let recipeSet = new Set(["апельсин", "яблоко", "банан"]);

for (let value of recipeSet) {
  console.log(value)
}

recipeSet.forEach((value, valueAgain, set) => {
  console.log(value);
});

// ! Set имеет те же встроенные методы, что и Map:

// ! 1. set.values() – возвращает перебираемый объект для значений,
// ! 2. set.keys() – то же самое, что и set.values(), присутствует для обратной
// ! совместимости с Map,
// ! 3. set.entries() – возвращает перебираемый объект для пар вида [значение, 
// ! значение], присутствует для обратной совместимости с Map.